load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@aspect_rules_js//npm:defs.bzl", "npm_package")

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    visibility = [":__subpackages__"],
)

ts_project(
    name = "deps_ts",
    srcs = ["index.ts"],
    declaration = True,
    # TODO: fix worker mode flaky bug when there are multiple ts_project targets in a package
    supports_workers = False,
    deps = [
        "//examples:node_modules/date-fns",
        "//examples/deps_lib/b",
    ],
)

npm_package(
    name = "deps_lib",
    srcs = [
        ":deps_ts",
        # TODO: This seems undesirable to have to specify the transitive closure of ts_project
        # targets. However, if npm_package is meant to use DefaultInfo then this _is_ technically
        # the correct behavior.
        "//examples/deps_lib:b",
    ],
    package = "@myorg/deps_lib",
    visibility = ["//examples:__subpackages__"],
)

ts_project(
    name = "importer_rel_ts",
    srcs = ["importer_rel.ts"],
    declaration = True,
    # TODO: fix worker mode flaky bug when there are multiple ts_project targets in a package
    supports_workers = False,
    deps = [
        ":deps_ts",
    ],
)

ts_project(
    name = "importer_linked_ts",
    srcs = ["importer_linked.ts"],
    declaration = True,
    # TODO: fix worker mode flaky bug when there are multiple ts_project targets in a package
    supports_workers = False,
    deps = [
        "//examples:node_modules/@myorg/deps_lib",
    ],
)
